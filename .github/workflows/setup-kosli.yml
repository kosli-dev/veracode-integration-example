name: Setup kosli

on:
  workflow_dispatch:

env:
  # kosli commands picks up org, flow, trail and api-token from these environment variables
  KOSLI_ORG: "${{ vars.KOSLI_ORG }}"
  KOSLI_API_TOKEN: "${{ secrets.KOSLI_PUBLIC_API_TOKEN }}"
  KOSLI_CLI_VERSION: "${{ vars.KOSLI_CLI_VERSION }}"
#  KOSLI_ENV_DEV: "${{ vars.KOSLI_ENV_DEV }}"
#  KOSLI_ENV_STAGING:  "${{ vars.KOSLI_ENV_STAGING }}"
#  KOSLI_ENV_PROD:  "${{ vars.KOSLI_ENV_PROD }}"
  # KOSLI_DRY_RUN: true

jobs:
  create-flows:
    name: Create kosli flows and environments
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Kosli cli
        uses: kosli-dev/setup-cli-action@v2
        with:
          version:
            ${{ vars.KOSLI_CLI_VERSION }}

      ### flows ###
#      - name: Create veracode-example-source flow
#        run:
#          kosli create flow veracode-example-source
#            --description "Track veracode example attestations for source"
#            --template-file kosli-source-template.yml

      - name: Create veracode-example-backend flow
        run:
          kosli create flow veracode-example-backend
            --description "Track veracode example attestations for backend"
            --template-file kosli-flow-templates/backend-template.yml

      - name: Create veracode-example-frontend flow
        run:
          kosli create flow veracode-example-frontend
            --description "Track veracode example attestations for frontend"
            --template-file kosli-flow-templates/frontend-template.yml

      - name: Create veracode-example-veracode flow
        run:
          kosli create flow veracode-example-veracode
            --description "Flow to track if the veracode process is followed"

      ### Custom attestation types ###
      - name: Create veracode-scan-executed attestation type
        run:
          kosli create attestation-type veracode-scan-executed
              --description "Attest that veracode scan was executed"
              --schema custom-attestation-types/veracode-scan-schema.json
              --jq '.scan_status == "SUCCESS"'

      - name: Create veracode-scan-vulnerability-summary attestation type
        run:
          kosli create attestation-type veracode-scan-vulnerability-summary
              --description "Attest that veracode scan has no vulnerabilities"
              --schema custom-attestation-types/veracode-scan-schema.json
              --jq '.scan_status == "SUCCESS"'
              --jq 'all(.severity_summary[]; . == 0)'
              --jq 'all(.gob_summary[]; . == 0)'

#      - name: Archive veracode-executed attestation type
#        run:
#          kosli archive attestation-type veracode-executed

      ### environments ###
#      - name: Create dev env
#        run:
#          kosli create environment ${{ env.KOSLI_ENV_DEV }}
#            --description "A simulated development environment"
#            --type server
#
#      - name: Create staging env
#        run:
#          kosli create environment ${{ env.KOSLI_ENV_STAGING }}
#            --description "A simulated staging environment"
#            --type server
#
#      - name: Create prod env
#        run:
#          kosli create environment ${{ env.KOSLI_ENV_PROD }}
#            --description "A simulated production environment"
#            --type server

      ### policies ###
#      - name: Create dev and staging policy
#        run:
#          kosli create policy veracode-example-dev-staging-policy kosli-dev-staging-policy.yml
#            --description "Trail compliance"
#            --type env
#
#      - name: Attach policy for dev and staging env
#        run:
#          kosli attach-policy veracode-example-dev-staging-policy
#            --environment  ${{ env.KOSLI_ENV_DEV }}
#            --environment  ${{ env.KOSLI_ENV_STAGING }}
#
#      - name: Create policy for prod env
#        run:
#          kosli create policy veracode-example-prod-policy kosli-prod-policy.yml
#            --description "Trail compliance and release-approval"
#            --type env
#
#      - name: Attach policy for prod env
#        run:
#          kosli attach-policy veracode-example-prod-policy
#            --environment  ${{ env.KOSLI_ENV_PROD }}
